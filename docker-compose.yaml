version: "3.8"
services:
   vote:
    build:
      context: vote
      dockerfile: Dockerfile
      target: dev
    environment:
      - REDIS_HOST=${REDIS_HOST}
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    volumes:
      - ./vote:/usr/local/app
    ports: 
    - '8082:80'
    networks:
      - front-tier
      - back-tier

   result:
     build:
      context: result
      dockerfile: Dockerfile
     depends_on:
      db:
        condition: service_healthy
     volumes:
       - ./result:/usr/local/app
     environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}

     ports:
     - '8083:80'
     networks:
      - front-tier
      - back-tier

   worker:
     build:
      context: worker
      dockerfile: Dockerfile
     depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
     networks:
      - back-tier
     environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - REDIS_HOST=${REDIS_HOST}

   redis:
    image: redis
    volumes:
      - "./healthchecks:/healthchecks"
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
    ports:
      - '127.0.0.1:6379:6379'
    networks: 
    - back-tier

   db:
      image: postgres:15-alpine
      environment:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
      volumes:
      - "db-data:/var/lib/postgresql/data"
      - "./healthchecks:/healthchecks"
      healthcheck:
       test: /healthchecks/postgres.sh
       interval: "5s"
      networks: 
      - back-tier

   seed:
      build: ./seed-data
      profiles: ["seed"]
      depends_on:
       vote:
        condition: service_healthy

volumes:
  db-data:
  redis-data:

networks:
  front-tier:
  back-tier: