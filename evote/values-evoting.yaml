# E-Voting Application Helm Values
# Use this with: helm install evoting ./evote -f values-evoting.yaml

# Application Configuration
app:
  name: evoting
  version: "1.0.0"

# Vote Service Configuration
vote:
  enabled: true
  replicaCount: 2
  image:
    repository: 427613144745.dkr.ecr.us-east-1.amazonaws.com/vote
    tag: d26f9464ffcfe9ad440f0152708ffe8a85b417f8
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 80
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "100m"

# Result Service Configuration  
result:
  enabled: true
  replicaCount: 2
  image:
    repository: 427613144745.dkr.ecr.us-east-1.amazonaws.com/result
    tag: d26f9464ffcfe9ad440f0152708ffe8a85b417f8
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 80
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "100m"

# Worker Service Configuration
worker:
  enabled: true
  replicaCount: 1
  image:
    repository: 427613144745.dkr.ecr.us-east-1.amazonaws.com/worker
    tag: d26f9464ffcfe9ad440f0152708ffe8a85b417f8
    pullPolicy: IfNotPresent
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "100m"

# Database Configuration
database:
  # Set to false if using external managed services (RDS)
  postgresql:
    enabled: true
    image:
      repository: postgres
      tag: "15-alpine"
    persistence:
      enabled: true
      size: 5Gi
    auth:
      username: postgres
      password: postgres
      database: postgres
    resources:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "500m"

  # Set to false if using external managed services (ElastiCache)
  redis:
    enabled: true
    image:
      repository: redis
      tag: "7-alpine"
    persistence:
      enabled: true
      size: 1Gi
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"

# External Services (for AWS managed services)
externalServices:
  postgresql:
    enabled: false
    host: "evoting-db.cluster-xyz.us-east-1.rds.amazonaws.com"
    port: 5432
    database: "evoting"
    username: "evoting_user"
    # Password should be in secret
  
  redis:
    enabled: false
    host: "evoting-redis.abc123.cache.amazonaws.com"
    port: 6379

# Application Environment Variables
env:
  OPTION_A: "Cats"
  OPTION_B: "Dogs"

# Ingress Configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: vote.evoting.local
      paths:
        - path: /
          pathType: Prefix
          service: vote
    - host: result.evoting.local  
      paths:
        - path: /
          pathType: Prefix
          service: result
  tls: []

# Monitoring
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    labels:
      app: evoting

# Security
security:
  networkPolicy:
    enabled: true
  podSecurityPolicy:
    enabled: false

# Autoscaling
autoscaling:
  vote:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
  result:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 70
  worker:
    enabled: false  # Worker doesn't need autoscaling